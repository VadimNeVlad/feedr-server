// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  bio       String    @default("")
  image     String    @default("")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  articles  Article[] @relation("articles")
  favorites Article[] @relation("favorites")
  following Follow[]  @relation("follower")
  followers Follow[]  @relation("following")
  comments  Comment[]

  @@map("users")
}

model Article {
  id             String    @id @default(uuid())
  slug           String    @unique
  title          String
  body           String    @default("")
  tagList        Tag[]
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  favoritesCount Int       @default(0) @map("favorites_count")
  author         User      @relation("articles", fields: [authorId], references: [id])
  authorId       String    @map("author_id")
  favorited      User[]    @relation("favorites")
  comments       Comment[]

  @@map("articles")
}

model Tag {
  id       String    @id @default(uuid())
  name     String    @unique
  articles Article[]

  @@map("tags")
}

model Follow {
  follower    User?  @relation("follower", fields: [followerId], references: [id])
  followerId  String @map("follower_id")
  following   User?  @relation("following", fields: [followingId], references: [id])
  followingId String @map("following_id")

  @@id([followerId, followingId])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author_id")
  article   Article  @relation(fields: [articleId], references: [id])
  articleId String   @map("article_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
